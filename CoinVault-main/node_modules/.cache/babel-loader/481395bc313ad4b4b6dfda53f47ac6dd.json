{"ast":null,"code":"var React = require('react');\n\nvar styleToJS = require('style-to-js').default;\n/**\n * Swap key with value in an object.\n *\n * @param {object} obj - The object.\n * @param {Function} [override] - The override method.\n * @returns - The inverted object.\n */\n\n\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n\n  for (key in obj) {\n    value = obj[key];\n\n    if (isOverridePresent) {\n      overrides = override(key, value);\n\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n\n  return result;\n}\n/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {object} props - The props being passed to the element.\n * @returns - Whether tag is custom component.\n */\n\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nvar styleToJSOptions = {\n  reactCompat: true\n};\n/**\n * Sets style prop.\n *\n * @param {null|undefined|string} style\n * @param {object} props\n */\n\nfunction setStyleProp(style, props) {\n  if (style === null || style === undefined) {\n    return;\n  }\n\n  try {\n    props.style = styleToJS(style, styleToJSOptions);\n  } catch (err) {\n    props.style = {};\n  }\n}\n/**\n * @constant {boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */\n\n\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16; // Taken from\n// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\n\nvar elementsWithNoTextChildren = new Set(['tr', 'tbody', 'thead', 'tfoot', 'colgroup', 'table', 'head', 'html', 'frameset']);\n/**\n * Checks if the given node can contain text nodes\n *\n * @param {DomElement} node - Node.\n * @returns - Whether node can contain text nodes.\n */\n\nfunction canTextBeChildOfNode(node) {\n  return !elementsWithNoTextChildren.has(node.name);\n}\n\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent,\n  setStyleProp: setStyleProp,\n  canTextBeChildOfNode: canTextBeChildOfNode,\n  elementsWithNoTextChildren: elementsWithNoTextChildren\n};","map":{"version":3,"names":["React","require","styleToJS","default","invertObject","obj","override","TypeError","key","value","isOverridePresent","overrides","result","length","isCustomComponent","tagName","props","indexOf","is","styleToJSOptions","reactCompat","setStyleProp","style","undefined","err","PRESERVE_CUSTOM_ATTRIBUTES","version","split","elementsWithNoTextChildren","Set","canTextBeChildOfNode","node","has","name","module","exports"],"sources":["/Users/ssn/Desktop/Mine/CODING REPO/github_twincoders91/coinvault/CoinVault-main/node_modules/html-react-parser/lib/utilities.js"],"sourcesContent":["var React = require('react');\nvar styleToJS = require('style-to-js').default;\n\n/**\n * Swap key with value in an object.\n *\n * @param {object} obj - The object.\n * @param {Function} [override] - The override method.\n * @returns - The inverted object.\n */\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n\n  for (key in obj) {\n    value = obj[key];\n\n    if (isOverridePresent) {\n      overrides = override(key, value);\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {object} props - The props being passed to the element.\n * @returns - Whether tag is custom component.\n */\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nvar styleToJSOptions = { reactCompat: true };\n\n/**\n * Sets style prop.\n *\n * @param {null|undefined|string} style\n * @param {object} props\n */\nfunction setStyleProp(style, props) {\n  if (style === null || style === undefined) {\n    return;\n  }\n  try {\n    props.style = styleToJS(style, styleToJSOptions);\n  } catch (err) {\n    props.style = {};\n  }\n}\n\n/**\n * @constant {boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\n\n// Taken from\n// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\nvar elementsWithNoTextChildren = new Set([\n  'tr',\n  'tbody',\n  'thead',\n  'tfoot',\n  'colgroup',\n  'table',\n  'head',\n  'html',\n  'frameset'\n]);\n\n/**\n * Checks if the given node can contain text nodes\n *\n * @param {DomElement} node - Node.\n * @returns - Whether node can contain text nodes.\n */\nfunction canTextBeChildOfNode(node) {\n  return !elementsWithNoTextChildren.has(node.name);\n}\n\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent,\n  setStyleProp: setStyleProp,\n  canTextBeChildOfNode: canTextBeChildOfNode,\n  elementsWithNoTextChildren: elementsWithNoTextChildren\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}