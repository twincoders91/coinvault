{"ast":null,"code":"/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  init(chartOptions) {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.9.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_layers","tz","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/ssn/Desktop/Mine/CODING REPO/github_twincoders91/coinvault/CoinVault-main/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}