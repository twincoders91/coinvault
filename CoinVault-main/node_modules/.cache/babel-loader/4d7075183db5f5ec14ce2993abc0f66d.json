{"ast":null,"code":"var domhandler = require('domhandler');\n\nvar constants = require('./constants');\n\nvar CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;\nvar Comment = domhandler.Comment;\nvar Element = domhandler.Element;\nvar ProcessingInstruction = domhandler.ProcessingInstruction;\nvar Text = domhandler.Text;\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\n\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n/**\n * Gets case-sensitive tag name.\n *\n * @param {string} tagName - Tag name in lowercase.\n * @returns {string|undefined} - Case-sensitive tag name.\n */\n\n\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param {NamedNodeMap} attributes - List of attributes.\n * @returns {object} - Map of attribute name to value.\n */\n\n\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute; // `NamedNodeMap` is array-like\n\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n\n  return result;\n}\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param {string} tagName - Lowercase tag name.\n * @returns {string} - Formatted tag name.\n */\n\n\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n\n  return tagName;\n}\n/**\n * Transforms DOM nodes to `domhandler` nodes.\n *\n * @param {NodeList} nodes - DOM nodes.\n * @param {Element|null} [parent=null] - Parent node.\n * @param {string} [directive] - Directive.\n * @returns {Array<Comment|Element|ProcessingInstruction|Text>}\n */\n\n\nfunction formatDOM(nodes, parent, directive) {\n  parent = parent || null;\n  var result = [];\n\n  for (var index = 0, len = nodes.length; index < len; index++) {\n    var node = nodes[index];\n    var current; // set the node data given the type\n\n    switch (node.nodeType) {\n      case 1:\n        // script, style, or tag\n        current = new Element(formatTagName(node.nodeName), formatAttributes(node.attributes));\n        current.children = formatDOM(node.childNodes, current);\n        break;\n\n      case 3:\n        current = new Text(node.nodeValue);\n        break;\n\n      case 8:\n        current = new Comment(node.nodeValue);\n        break;\n\n      default:\n        continue;\n    } // set previous node next\n\n\n    var prev = result[index - 1] || null;\n\n    if (prev) {\n      prev.next = current;\n    } // set properties for current node\n\n\n    current.parent = parent;\n    current.prev = prev;\n    current.next = null;\n    result.push(current);\n  }\n\n  if (directive) {\n    current = new ProcessingInstruction(directive.substring(0, directive.indexOf(' ')).toLowerCase(), directive);\n    current.next = result[0] || null;\n    current.parent = parent;\n    result.unshift(current);\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\nexports.formatAttributes = formatAttributes;\nexports.formatDOM = formatDOM;","map":{"version":3,"names":["domhandler","require","constants","CASE_SENSITIVE_TAG_NAMES","Comment","Element","ProcessingInstruction","Text","caseSensitiveTagNamesMap","tagName","i","len","length","toLowerCase","getCaseSensitiveTagName","formatAttributes","attributes","result","attribute","name","value","formatTagName","caseSensitiveTagName","formatDOM","nodes","parent","directive","index","node","current","nodeType","nodeName","children","childNodes","nodeValue","prev","next","push","substring","indexOf","unshift","exports"],"sources":["/Users/ssn/Desktop/Mine/CODING REPO/github_twincoders91/coinvault/CoinVault-main/node_modules/html-dom-parser/lib/client/utilities.js"],"sourcesContent":["var domhandler = require('domhandler');\nvar constants = require('./constants');\n\nvar CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;\n\nvar Comment = domhandler.Comment;\nvar Element = domhandler.Element;\nvar ProcessingInstruction = domhandler.ProcessingInstruction;\nvar Text = domhandler.Text;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\n\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param {string} tagName - Tag name in lowercase.\n * @returns {string|undefined} - Case-sensitive tag name.\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param {NamedNodeMap} attributes - List of attributes.\n * @returns {object} - Map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param {string} tagName - Lowercase tag name.\n * @returns {string} - Formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Transforms DOM nodes to `domhandler` nodes.\n *\n * @param {NodeList} nodes - DOM nodes.\n * @param {Element|null} [parent=null] - Parent node.\n * @param {string} [directive] - Directive.\n * @returns {Array<Comment|Element|ProcessingInstruction|Text>}\n */\nfunction formatDOM(nodes, parent, directive) {\n  parent = parent || null;\n  var result = [];\n\n  for (var index = 0, len = nodes.length; index < len; index++) {\n    var node = nodes[index];\n    var current;\n\n    // set the node data given the type\n    switch (node.nodeType) {\n      case 1:\n        // script, style, or tag\n        current = new Element(\n          formatTagName(node.nodeName),\n          formatAttributes(node.attributes)\n        );\n        current.children = formatDOM(node.childNodes, current);\n        break;\n\n      case 3:\n        current = new Text(node.nodeValue);\n        break;\n\n      case 8:\n        current = new Comment(node.nodeValue);\n        break;\n\n      default:\n        continue;\n    }\n\n    // set previous node next\n    var prev = result[index - 1] || null;\n    if (prev) {\n      prev.next = current;\n    }\n\n    // set properties for current node\n    current.parent = parent;\n    current.prev = prev;\n    current.next = null;\n\n    result.push(current);\n  }\n\n  if (directive) {\n    current = new ProcessingInstruction(\n      directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      directive\n    );\n    current.next = result[0] || null;\n    current.parent = parent;\n    result.unshift(current);\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\nexports.formatAttributes = formatAttributes;\nexports.formatDOM = formatDOM;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}