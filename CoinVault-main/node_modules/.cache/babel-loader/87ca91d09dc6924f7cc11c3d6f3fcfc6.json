{"ast":null,"code":"var reactProperty = require('react-property');\n\nvar utilities = require('./utilities');\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param {object} [attributes={}] - HTML/SVG DOM attributes.\n * @returns - React props.\n */\n\n\nmodule.exports = function attributesToProps(attributes) {\n  attributes = attributes || {};\n  var valueOnlyInputs = {\n    reset: true,\n    submit: true\n  };\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var propName;\n  var propertyInfo;\n  var props = {};\n  var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName]; // ARIA (aria-*) or custom data (data-*) attribute\n\n    if (reactProperty.isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    } // convert HTML/SVG attribute to React prop\n\n\n    attributeNameLowerCased = attributeName.toLowerCase();\n    propName = getPropName(attributeNameLowerCased);\n\n    if (propName) {\n      propertyInfo = reactProperty.getPropertyInfo(propName); // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      // https://reactjs.org/docs/uncontrolled-components.html\n\n      if ((propName === 'checked' || propName === 'value') && !inputIsValueOnly) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n\n      props[propName] = attributeValue;\n\n      switch (propertyInfo && propertyInfo.type) {\n        case reactProperty.BOOLEAN:\n          props[propName] = true;\n          break;\n\n        case reactProperty.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n\n          break;\n      }\n\n      continue;\n    } // preserve custom attribute if React >=16\n\n\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  } // transform inline style to object\n\n\n  utilities.setStyleProp(attributes.style, props);\n  return props;\n};\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param {string} attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\n\n\nfunction getPropName(attributeName) {\n  return reactProperty.possibleStandardNames[attributeName];\n}","map":{"version":3,"names":["reactProperty","require","utilities","module","exports","attributesToProps","attributes","valueOnlyInputs","reset","submit","attributeName","attributeNameLowerCased","attributeValue","propName","propertyInfo","props","inputIsValueOnly","type","isCustomAttribute","toLowerCase","getPropName","getPropertyInfo","BOOLEAN","OVERLOADED_BOOLEAN","PRESERVE_CUSTOM_ATTRIBUTES","setStyleProp","style","possibleStandardNames"],"sources":["/Users/ssn/Desktop/Mine/CODING REPO/github_twincoders91/coinvault/CoinVault-main/node_modules/html-react-parser/lib/attributes-to-props.js"],"sourcesContent":["var reactProperty = require('react-property');\nvar utilities = require('./utilities');\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param {object} [attributes={}] - HTML/SVG DOM attributes.\n * @returns - React props.\n */\nmodule.exports = function attributesToProps(attributes) {\n  attributes = attributes || {};\n\n  var valueOnlyInputs = {\n    reset: true,\n    submit: true\n  };\n\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var propName;\n  var propertyInfo;\n  var props = {};\n  var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (reactProperty.isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML/SVG attribute to React prop\n    attributeNameLowerCased = attributeName.toLowerCase();\n    propName = getPropName(attributeNameLowerCased);\n\n    if (propName) {\n      propertyInfo = reactProperty.getPropertyInfo(propName);\n\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      // https://reactjs.org/docs/uncontrolled-components.html\n      if (\n        (propName === 'checked' || propName === 'value') &&\n        !inputIsValueOnly\n      ) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n\n      props[propName] = attributeValue;\n\n      switch (propertyInfo && propertyInfo.type) {\n        case reactProperty.BOOLEAN:\n          props[propName] = true;\n          break;\n        case reactProperty.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // transform inline style to object\n  utilities.setStyleProp(attributes.style, props);\n\n  return props;\n};\n\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param {string} attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\nfunction getPropName(attributeName) {\n  return reactProperty.possibleStandardNames[attributeName];\n}\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,UAA3B,EAAuC;EACtDA,UAAU,GAAGA,UAAU,IAAI,EAA3B;EAEA,IAAIC,eAAe,GAAG;IACpBC,KAAK,EAAE,IADa;IAEpBC,MAAM,EAAE;EAFY,CAAtB;EAKA,IAAIC,aAAJ;EACA,IAAIC,uBAAJ;EACA,IAAIC,cAAJ;EACA,IAAIC,QAAJ;EACA,IAAIC,YAAJ;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,gBAAgB,GAAGV,UAAU,CAACW,IAAX,IAAmBV,eAAe,CAACD,UAAU,CAACW,IAAZ,CAAzD;;EAEA,KAAKP,aAAL,IAAsBJ,UAAtB,EAAkC;IAChCM,cAAc,GAAGN,UAAU,CAACI,aAAD,CAA3B,CADgC,CAGhC;;IACA,IAAIV,aAAa,CAACkB,iBAAd,CAAgCR,aAAhC,CAAJ,EAAoD;MAClDK,KAAK,CAACL,aAAD,CAAL,GAAuBE,cAAvB;MACA;IACD,CAP+B,CAShC;;;IACAD,uBAAuB,GAAGD,aAAa,CAACS,WAAd,EAA1B;IACAN,QAAQ,GAAGO,WAAW,CAACT,uBAAD,CAAtB;;IAEA,IAAIE,QAAJ,EAAc;MACZC,YAAY,GAAGd,aAAa,CAACqB,eAAd,CAA8BR,QAA9B,CAAf,CADY,CAGZ;MACA;;MACA,IACE,CAACA,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,OAAxC,KACA,CAACG,gBAFH,EAGE;QACAH,QAAQ,GAAGO,WAAW,CAAC,YAAYT,uBAAb,CAAtB;MACD;;MAEDI,KAAK,CAACF,QAAD,CAAL,GAAkBD,cAAlB;;MAEA,QAAQE,YAAY,IAAIA,YAAY,CAACG,IAArC;QACE,KAAKjB,aAAa,CAACsB,OAAnB;UACEP,KAAK,CAACF,QAAD,CAAL,GAAkB,IAAlB;UACA;;QACF,KAAKb,aAAa,CAACuB,kBAAnB;UACE,IAAIX,cAAc,KAAK,EAAvB,EAA2B;YACzBG,KAAK,CAACF,QAAD,CAAL,GAAkB,IAAlB;UACD;;UACD;MARJ;;MAUA;IACD,CAtC+B,CAwChC;;;IACA,IAAIX,SAAS,CAACsB,0BAAd,EAA0C;MACxCT,KAAK,CAACL,aAAD,CAAL,GAAuBE,cAAvB;IACD;EACF,CA5DqD,CA8DtD;;;EACAV,SAAS,CAACuB,YAAV,CAAuBnB,UAAU,CAACoB,KAAlC,EAAyCX,KAAzC;EAEA,OAAOA,KAAP;AACD,CAlED;AAoEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,WAAT,CAAqBV,aAArB,EAAoC;EAClC,OAAOV,aAAa,CAAC2B,qBAAd,CAAoCjB,aAApC,CAAP;AACD"},"metadata":{},"sourceType":"script"}